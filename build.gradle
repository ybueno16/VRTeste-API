plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
}

group = 'com.br'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	springdocVersion = "2.3.0"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.flywaydb:flyway-core:10.18.0'
	implementation 'org.flywaydb:flyway-database-postgresql:10.4.1'
	implementation "org.springdoc:springdoc-openapi-starter-common:2.3.0"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation"org.testcontainers:junit-jupiter"
	runtimeOnly 'org.postgresql:postgresql'
	testRuntimeOnly"org.junit.platform:junit-platform-launcher"
	implementation "org.springdoc:springdoc-openapi-starter-common:${springdocVersion}"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
	implementation 'org.aspectj:aspectjweaver:1.9.7'
	testImplementation("org.springframework.boot:spring-boot-testcontainers")
	testImplementation("org.testcontainers:junit-jupiter")
	testImplementation("org.testcontainers:postgresql:1.19.8")
}

tasks.jacocoTestReport {
	reports {
		csv.required.set(true)
	}
}

test {
	testLogging.showStandardStreams = true
	testLogging {
		events "passed", "skipped", "failed"
		exceptionFormat "full"
		showStandardStreams true
	}

	jacoco {
		enabled true
	}

	useJUnitPlatform()
	finalizedBy(jacocoTestReport)
}
